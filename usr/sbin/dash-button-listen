#!/usr/bin/python

import socket
import struct
import binascii
import os
import stat
import time
import sys

# Written by Bob Steinbeiser (https://medium.com/@xtalker)

detect = False

def isAmazonMAC(mac_address):
    "This will test a mac address and return a true if it matches known MAC prefixes"
    # See http://www.adminsub.net/mac-address-finder/amazon
    amazon_mac_prefix = ['F0D2F1','F0272D','AC63BE','A002DC','8871E5','84D6D0','74C246','747548','6854FD','50F5DA','44650D','34D270','0C47C9']
    if mac_address.lower()[:6] in amazon_mac_prefix:
        return True
    return False

def AskYesNo(prompt_str):
    "Asks the user for Y/N response"
    while True:
        user_input = raw_input(prompt_str + ' (Y/n)?: ')
        print user_input
        if user_input in ['Yes','yes','Y','y','']:
            return True
        if user_input in ['No','no','N','n']:
            return False



if len(sys.argv) > 1:
    detect=sys.argv[1].lower() == "detect"

rawSocket = socket.socket(socket.AF_PACKET, socket.SOCK_RAW,
                          socket.htons(0x0003))

executable = stat.S_IEXEC | stat.S_IXGRP | stat.S_IXOTH

pid = str(os.getpid())

while True:
    packet = rawSocket.recvfrom(2048)

    try:
        ethernet_header = packet[0][0:14]
        ethernet_detailed = struct.unpack('!6s6s2s', ethernet_header)

        arp_header = packet[0][14:42]
        arp_detailed = struct.unpack('2s2s1s1s2s6s4s6s4s', arp_header)
    except Exception as e:
        print "Exception occured when unpacking arp packet"

    # skip non-ARP packets
    ethertype = ethernet_detailed[2]
    if ethertype != '\x08\x06':
        continue


    source_mac = binascii.hexlify(arp_detailed[5])
#    dest_ip = socket.inet_ntoa(arp_detailed[8])

    if detect:
        if isAmazonMAC(source_mac):
            if os.path.isdir(os.path.join('/etc/dash', source_mac)) == False:
                if AskYesNo("Add Dash Button " + source_mac):
                    # Add the configuration folder
                    os.system('/etc/dash/dash-add.sh ' + source_mac)
    else:
        # Invoke the arp handler
        os.system('/etc/dash/arp-detected.sh ' + source_mac)
